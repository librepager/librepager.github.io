I"¡<p>#responsive-image {  width: 100%;  height: auto; }</p>

<h1 id="touchscreen-testbed">Touchscreen Testbed</h1>

<p>The Touchscreen Testbed (TS_testbed) is a soldered breadboard designed to connect commercially available touchscreen dev boards to the target mcu dev board, the ESP32 Devkit V1 to test software.</p>

<p>![]<img src="/img/pop_ts_tb_300.jpg" id="responsive-image" /><br />
This is the Touchscreen Testbed populated with a ILI9341 resistive touchscreen and a ESP32 Devkit V1 (30 pin) dev board, ready to plug into your computer with a usb cable to download code and/or to power for testing. Notice the 2x5 pin block below the dev board for connection to Espressifâ€™s JTAG hardware debugging board, the <a href="https://docs.espressif.com/projects/espressif-esp-iot-solution/en/latest/hw-reference/ESP-Prog_guide.html">Esp_Prog</a>.<br /></p>

<p><img src="/img/cb_450px.png" width="300" /><br /> 
Hereâ€™s the same soldered breadboard with the touchscreen and dev board removed.<br />
<img src="/img/TS_Tb_fritzing.png" width="300" /><br />
And this is the wiring diagram for the same device.</p>

<h1 id="how-we-designed-it">How we designed it.</h1>

<p>The easiest way to explain it is to send you to the excellent <a href="https://www.XTronical.com/esp32ili9341">XTronical tutorial for ILI9341 resistive touchscreen</a>.  Hereâ€™s another link to the <a href="https://www.youtube.com/watch?v=rq5yPJbX_uk">YouTube video</a> demonstrating XTronicalâ€™s finished device.</p>

<p>In a straight forward way, the Touchscreen Testbed uses SPI drivers from the <a href="https://github.com/Bodmer/TFT_eSPI">TFT_eSPI</a> library by Bodmer to drive compatible touchscreens.</p>

<p>Here is a link to our LibrePager  <a href="https://github.com/librepager/ESP32_Graphic_Testbed">ESP32_Graphic_Testbed</a> Code Repository.  This code was generated using Visual Code Studio with PlatformIO, to load test device.</p>
<ul>
  <li>Notice how in /scr/main.cpp there are many different ways that we tried out the functions of the TFT_eSPI library and commented out the lines.</li>
  <li>Much of the magic of the TFT_eSPI library is controlled by selections made in the /lib/TFT_eSPI/User_Setup.h file. You must make custom changes in this file to select the correct touchscreen driver chip and to select the functions of the pins for the SPI buss.</li>
  <li>We used the XTronical wiring recommendations with one exception:
we used pin 5 instead of pin 15 for TFT_CS.  This change allowed us to exposes the pins for connection to Espressifâ€™s JTAG hardware debugging board, the <a href="https://docs.espressif.com/projects/espressif-esp-iot-solution/en/latest/hw-reference/ESP-Prog_guide.html">Esp_Prog</a>, which uses pin 15.</li>
  <li>We had limited success coding for the touchscreen devices until we built these circuits in a soldered breadboard. We tried it using solderless breadboards, but intermittent open circuit problems confused debugging substantially.</li>
</ul>
:ET